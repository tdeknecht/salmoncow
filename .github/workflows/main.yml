name: CI

# on:
#   push:
#   pull_request:
#     branches: [ main ]

jobs:
  build-infra:
    runs-on: ubuntu-latest

    container: 
      image: tdeknecht/aws:latest
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        TF_VAR_RECAPTCHA_SECRET_KEY: ${{secrets.TF_VAR_RECAPTCHA_SECRET_KEY}}
        TF_VAR_RECAPTCHA_SITE_KEY: ${{secrets.TF_VAR_RECAPTCHA_SITE_KEY}}

    steps:
      - uses: actions/checkout@v1

      - name: Set AWS credentials
        run: |
          aws --version
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

      - name: Set up tfvars
        working-directory: ./src/terraform
        id: vars
        run: |
          cat > pipeline.auto.tfvars <<EOF
          recaptcha_secret_key="${{secrets.TF_VAR_RECAPTCHA_SECRET_KEY}}"
          recaptcha_site_key="${{secrets.TF_VAR_RECAPTCHA_SITE_KEY}}"
          EOF

      - name: Terraform INIT and PLAN
        run: |
          cd src/terraform
          terraform -version
          terraform init
          terraform plan

      - name: Terraform APPLY
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          cd src/terraform
          terraform apply -auto-approve

  deploy-app:
    runs-on: ubuntu-latest
    trigger: main

    steps:
      - uses: actions/checkout@v1

      - name: Set AWS credentials and region
        run: |
          aws --version
          aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
          aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws configure set region us-east-1

      - name: Build app
        run: |
          cd src/spa
          npm install
          npm run build
      
      - name: Copy files
        run: |
          aws s3 sync ./build s3://salmoncow.com --delete